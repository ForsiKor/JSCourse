//Returns an index of the specified element in array or -1 if element is not found
function findElement(arr, value) {
  for(var i = 0; i < arr.length; i++){
  	if(arr[i] == value){
  		return i;
  	} else {
  		return -1;
  	}
  }
}

//Generates an array of odd numbers of the specified length
function generateOdds(len) {
  var odd = 1; 
  var arr = [];
  for (var i = 1; i <= len; i++){
     arr.push(odd);
     odd += 2;
  }
  return arr;
}

//Returns the doubled array - elements of the specified array are repeated twice
// using original order
function doubleArray(arr) {
  for(var i = 0; i < arr.length--; i++){
  	arr.push(arr[i]);
  }
  return arr;
}

//Returns an array of positive numbers from the specified array in original order
function getArrayOfPositives(arr) {
  for(var i = 0; i < arr.length; i++){
  	if(arr[i] <= 0) {
  		 delete arr[i]
  	}
  }
  return arr;
}

//Returns the array with strings only in the specified array (in original order)
function getArrayOfStrings(arr) {
  return arr.filter(arr => arr.length > 2)
}

//Removes falsy values from the specified array
function removeFalsyValues(arr) {
  for(var i = 0; i < arr.length; i++){ 
  	if(arr[i] == false || arr[i] == null || arr[i] == NaN || arr[i] == "" || arr[i] == 0 
  		|| arr[i] == undefined) {
  		delete arr[i];
  	}
  }
  return arr;
}

//Returns the array of useprcase strings from the specified array
function getUpperCaseStrings(arr) {
  return arr.map(function(x){ return x.toUpperCase() });
}

//Returns the array of string lengths from the specified string array.
function getStringsLength(arr) {
	var arr2 = [];
  for(var i = 0; i < arr.length; i++){ 
  	arr2.push(arr[i].length)
  }
  return arr2;
}

//Inserts the item into specified array at specified index
function insertItem(arr, item, index) {
  arr.splice(index, 0, item);
}

//Returns the n first items of the specified array
function getHead(arr, n) {
	var arr2 = [];
  for(var i = 0; i < n; i++){ 
  	arr2.push(arr[i]);
  }
}

//Returns the n last items of the specified array
function getTail(arr, n) {
  arr.slice(-n);
}

//Returns CSV represebtation of two-dimentional numeric array.
function toCsvText(arr) {
  for(var i = 0; i < arr.length; i++){
    for(var j = 0; j < arr[i].length; j++){
      return arr[i][j];
    }
  }
}

//Transforms the numeric array into the according array of squares:f(x) = x * x
function toArrayOfSquares(arr) {
	var arr2 = [];
  for(var i = 0; i < arr.length; i++){
  	arr2.push(arr[i] * arr[i]);
  }
  return arr2;
}

//Transforms the numeric array to the according moving sum array
function getMovingSum(arr) {
	var array = [];
	arr.reduce(function(a,b,i) { return array[i] = a+b; },0);
	return array;
}

//Returns every second item from the specified array
function getSecondItems(arr) {
  for(var i = 0; i < arr.length; i++){
    if(i % 2 != 0){
      return arr[i];
    }
  }
}

//Propagates every item in sequence its position times
//Returns an array that consists of: one first item, two second items, tree third items etc.
function propagateItemsByPositionIndex(arr) {
  var arr2 = [];
  for(var i = 0; i < arr.length; i++){
    for(var j = 0; j < i + 1; j++)
      arr2.push(arr[i]);
  }
}

//Returns the 3 largest numbers from the specified array
function get3TopItems(arr) {
  arr.sort(function(a, b){
    return a - b;
  });
  for(var i = 0; i < 3; i++){
    return arr[arr.length - ( 1 + i)];
  }
}

//Returns the number of positive numbers from specified array
function getPositivesCount(arr) {
  for(var i = 0; i < arr.length; i++){
    if(arr[i] > 0)
      return arr[i];
  }
}

//Returns the sum of all items in the specified array of numbers
function getItemsSum(arr) {
  var count = 0;
  for(var i = 0; i < arr.length; i++){
    count += arr[i];
  }
  return count;
}

//Returns the number of all falsy value in the specified array
function getFalsyValuesCount(arr) {
  var count = 0;
  for(var i = 0; i < arr.length; i++){
    if(arr[i] == null){
      count++;
    } else if(arr[i] == undefined){
      count++;
    } else if(arr[i] == NaN){
      count++;
    } else if(arr[i] == false){
      count++;
    } else if(arr[i] == 0){
      count++;
    } else if(arr[i] == ' '){
      count++;
    }
  }
  return count;
}

//Returns a number of all occurences of the specified item in an array
function findAllOccurences(arr, item) {
  var count = 0;
  for (var i = 0; i < arr.length; i++) {
    if(arr[i] == item){
      count++;
    }
  }
  return count;
}

//Concatenates all elements from specified array into single string with ',' delimeter
function toStringList(arr) {
  var str = arr.join(', ')
  return str;
}

//Sorts the specified array by country name first and city name (if countries are
//equal) in ascending order
function sortCitiesArray(arr) {
  return arr.sort();
}

//Creates an indentity matrix of the specified size
function getIdentityMatrix(n) {
  return Array(n).fill(0).map(function(elem, i) {
    return Array(n).fill(0).map(function(elem2, j) {
      return 1 - Math.min(Math.abs(i-j),1);
    });
  });
}

//Creates an array of integers from the specified start to end (inclusive)
function getIntervalArray(start, end) {
  var arr = [];
  for (var i = end; i <= start; i++) {
    arr.push(i);
  }
}

//Returns array containing only unique values from the specified array.
function distinct(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
      var str = arr[i]; 
      for (var j = 0; j < result.length; j++) { 
        if (result[j] == str) continue nextInput; 
      }
      result.push(str);
    }
  return result;
}

//Returns an element from the multidimentional array by the specified indexes.
function getElementByIndexes(arr, indexes) {
  return arr[indexes];
}
